name: Release On Demand

on:
  workflow_dispatch:
    inputs:
      description:
        description: 'Brief description'
        required: true
      permalink:
        description: 'Permalink'
        required: true

env:
  EMAILS_FILE: ./forward_emails.txt

jobs:
  release_on_demand:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter doctor
      - run: flutter pub get
      - run: flutter test
      # Until steps are able to run in parallel
      - run: flutter build apk --flavor dev --dart-define=env.mode=prod --no-tree-shake-icons
      - run: flutter build apk --flavor staging --dart-define=env.mode=staging --no-tree-shake-icons
      - run: flutter build apk --flavor prod --dart-define=env.mode=prod --no-tree-shake-icons
      - run: flutter build apk --flavor mock --dart-define=env.mode=mock --no-tree-shake-icons
      - name: Copying to Artifacts repository
        id: copy
        run: |
          set -e

          file_filter=(build/app/outputs/flutter-apk/*-release.apk)

          username=${{ github.repository_owner }}
          repo=mobile-prereleases
          destination_branch=main

          branch_name=$(basename "${{ github.ref }}")
          version="branches/$branch_name"
          echo "Found tag for $version"

          email=${{ secrets.MAIL_USERNAME }}
          token=${{ secrets.API_TOKEN_GITHUB }}

          clone_dir=$(mktemp -d)

          echo "Cloning destination git repository"
          git config --global user.email "$email"
          git config --global user.name "$username"
          git clone --single-branch --branch $destination_branch "https://$token@github.com/$username/$repo.git" "$clone_dir"

          echo "Copying contents to git repo"
          output_folder="$clone_dir/$version"
          rm -rf "$output_folder"
          mkdir -p "$output_folder"

          echo "Moving artifacts"
          for f in "${file_filter[@]}"; do cp -R "$f" "$output_folder/$(basename "$f")"; done

          echo "Writing README.md"
          body="# $version\n${{ github.event.inputs.description }}\n\n${{ github.event.inputs.permalink }}\n"
          echo -e "${body//\\r}" >> "$output_folder/README.md"
          echo "Writing CHANGELOG.md"
          echo -e "${body//\\r}" >> "$clone_dir/CHANGELOG.md"

          ls -R "$output_folder"
          cd "$clone_dir"

          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes detected"
          else
            echo "Adding git commit"
            git add -A
            git commit --message "${version}"
            git push origin $destination_branch
          fi

          echo "Copying complete ðŸ‘Œ"

          url="https://github.com/$username/$repo"
          echo "##[set-output name=branch_url;]"$url/tree/$destination_branch""
          echo "##[set-output name=readme_url;]"$url/tree/$destination_branch/$version/README.md""
          echo "##[set-output name=url;]"$url/raw/$destination_branch/$version""
      - name: Get forward emails
        id: get_emails
        run: echo "##[set-output name=emails;]$(cat "${{ env.EMAILS_FILE }}")"
      - name: Send Mail Attachments
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Abiodun Ubenwa Mobile Pre-Release Build Successful
          to: ${{ steps.get_emails.outputs.emails }}
          from:   Ubenwa Abiodun <${{secrets.MAIL_USERNAME}}>
          content_type: text/html
          body: |
            <h1>Build Successful</h1>
            <p>Successfully generated builds for <a href="${{ steps.copy.outputs.branch_url }}">Borome mobile apps</a>.</p>
            <p>Attached to this mail are links to four separate pre-release android builds for:</p>
            <ol>
                <li><a href="${{ steps.copy.outputs.url }}/app-mock-release.apk">Mock (UI/UX)</a></li>
                <li><a href="${{ steps.copy.outputs.url }}/app-dev-release.apk">Development</a></li>
                <li><a href="${{ steps.copy.outputs.url }}/app-staging-release.apk">Staging (Quality assurance)</a></li>
                <li><a href="${{ steps.copy.outputs.url }}/app-prod-release.apk">Production (Customers)</a></li>
            </ol>
            <p>You can pick any of the above. The intention is to try and break either one or all of the apps.</p>
            <p>More technical information on what changed can be found in this <a href="${{ steps.copy.outputs.readme_url }}/">READ ME</a></p>
            <p>Good Luck!</p>